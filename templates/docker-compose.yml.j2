---
services:
  db:
    container_name: '{{ postgres_ha_cont_name }}'
    image: '{{ postgres_ha_cont_image }}'
    restart: 'always'
{% if postgres_ha_share_memory is defined %}
    shm_size: '{{ postgres_ha_share_memory }}'
{% endif %}
    environment:
      POSTGRES_DB:       '{{ postgres_ha_db_name | mandatory }}'
      POSTGRES_USER:     '{{ postgres_ha_admin_user }}'
      POSTGRES_PASSWORD: '{{ postgres_ha_admin_pass }}'
{% if not postgres_ha_is_master %}
      PGPASSWORD:        '{{ postgres_ha_replica_pass }}'
{% endif %}
      # This fixes chmod errors on DB startup due to volume + userns-remap
      PGDATA: '/var/lib/postgresql/data/pgdata'
{% if postgres_ha_cont_networks %}
    networks: {{ postgres_ha_cont_networks | to_json }}
{% endif %}
    ports:
      - '{{ postgres_ha_cont_port }}:{{ postgres_ha_cont_port }}'
    tmpfs:
      - '/run/postgresql:size={{ postgres_ha_cont_run_size }}'
      - '/tmp:size={{ postgres_ha_cont_tmp_size }}'
    volumes:
      - '{{ postgres_ha_cont_data_vol }}:/var/lib/postgresql/data'
      - '{{ postgres_ha_cont_init_vol }}:/docker-entrypoint-initdb.d'
      - '{{ postgres_ha_cont_backup_vol }}:/backup'
    command: |
      -p {{ postgres_ha_cont_port }}
    healthcheck:
      interval: 30s
      retries: 5
      test: [
        'CMD', 'pg_isready',
        '-p', '{{ postgres_ha_cont_port }}',
        '-U', '{{ postgres_ha_admin_user }}',
        '-d', 'postgres'
      ]

  metrics:
    container_name: '{{ postgres_ha_metrics_exporter_cont_name }}'
    image: '{{ postgres_ha_metrics_exporter_cont_image }}'
    restart: 'always'
    environment:
      DATA_SOURCE_URI:  '{{ postgres_ha_cont_name }}:{{ postgres_ha_cont_port }}/{{ postgres_ha_db_name }}?sslmode=disable'
      DATA_SOURCE_USER: '{{ postgres_ha_admin_user }}'
      DATA_SOURCE_PASS: '{{ postgres_ha_admin_pass }}'
    ports:
      - '{{ postgres_ha_metrics_exporter_cont_port }}:{{ postgres_ha_metrics_exporter_cont_port }}'
    command: |
      --log.level={{ postgres_ha_metrics_exporter_log_level }}
      --web.listen-address=':{{ postgres_ha_metrics_exporter_cont_port }}'
{% for flag in postgres_ha_metrics_exporter_extra_flags %}
      {{ flag | mandatory }}
{% endfor %}
    depends_on:
      - db

{% if postgres_ha_perf_metrics_exporter_enabled %}
  perf-metrics:
    container_name: '{{ postgres_ha_perf_metrics_exporter_cont_name }}'
    image: '{{ postgres_ha_perf_metrics_exporter_cont_image }}'
    restart: 'always'
    environment:
      DSN: 'postgresql://{{ postgres_ha_cont_name }}:{{ postgres_ha_cont_port }}@{{ postgres_ha_cont_name }}:{{postgres_ha_cont_port }}/{{ postgres_ha_db_name }}?connect_timeout=1&statement_timeout=30000&sslmode=disable'
      LISTEN: '0.0.0.0:{{ postgres_ha_perf_metrics_exporter_cont_port }}'
    ports:
      - '{{ postgres_ha_perf_metrics_exporter_cont_port }}:{{ postgres_ha_perf_metrics_exporter_cont_port }}'
{% endif %}

{% if postgres_ha_cont_networks != [] %}
networks:
{% for network in postgres_ha_cont_networks %}
  {{ network }}:
    external: true
{% endfor %}
{% endif %}
